<!-- /snippets/product-grid-item.liquid -->

{% comment %}
  A grid item for products used in collection grid view

  * product {object} - The current prodcut

  {% render 'product-grid-item', product: product %}
{% endcomment %}

{%- liquid
  assign current_variant = product.first_available_variant

  assign on_sale = false
  if product.compare_at_price > product.price
    assign on_sale = true
  endif

  assign sold_out = true
  if product.available
    assign sold_out = false
  endif

  assign sellout_badge = false
  if sold_out and settings.badge_sellout
    assign sellout_badge = true
  endif

  assign sale_badge = false
  if on_sale and settings.badge_sale
    assign sale_badge = true
    assign sale_badge_content = 'products.product.sale' | t
    if settings.badge_sale_discount
      if settings.badge_sale_type == 'dollar'
        if settings.currency_code_enable
          assign sale_badge_content = product.compare_at_price | minus: product.price | money_with_currency
        else
          assign sale_badge_content = product.compare_at_price | minus: product.price | money_without_trailing_zeros
        endif
      else
        assign difference = product.compare_at_price | minus: product.price
        assign percent_off = difference | times: 1.0 | divided_by: product.compare_at_price | times: 100
        assign sale_badge_content = percent_off | floor | append: '%'
      endif
      assign save_word = 'products.product.save' | t | append: ' '
      assign sale_badge_content = sale_badge_content | prepend: save_word
    endif
  endif

  assign custom_badge = false

  if product.metafields.theme.badge != blank and product.metafields.theme.badge.type == 'single_line_text_field'
    assign custom_badge = true
    assign custom_badge_content = product.metafields.theme.badge.value
  endif

  if settings.badge_custom
    for tag in product.tags
      if tag contains "_badge_"
        assign custom_badge = true
        assign custom_badge_content = tag | remove: '_badge_' | replace: '_', ' '
        break
      endif
    endfor
  endif

  assign setting_badge = false
  if badge_string and badge_string != ''
    assign setting_badge = true
  endif

  assign tagged = false
  if sellout_badge or sale_badge or custom_badge or setting_badge
    assign tagged = true
  endif

  assign has_siblings = false
  if settings.show_siblings and product.metafields.theme.siblings.value != blank and product.metafields.theme.siblings.type == 'single_line_text_field'
    assign has_siblings = true
  endif

  assign images_limit = 1
  if settings.cycle_hover_enable
    assign images_limit = 5
  endif
-%}
{%- capture badge -%}
  {%- if tagged %}
    {%- if setting_badge -%}
      <div class="product__badge product__badge--setting">{{ badge_string }}</div>
    {%- elsif custom_badge -%}
      <div class="product__badge product__badge--custom">{{ custom_badge_content }}</div>
    {%- elsif sellout_badge -%}
      <div class="product__badge product__badge--sold">{{ 'products.product.sold_out' | t }}</div>
    {%- elsif sale_badge -%}
      <div class="product__badge product__badge--sale">{{ sale_badge_content }}</div>
    {%- endif -%}
  {%- endif -%}
{%- endcapture -%}


{%- capture swatches -%}
  {%- if settings.swatches_enable and settings.swatches_collection_enable -%}
    {%- capture swatch_translation -%}{{ 'general.swatches.color' | t }}{%- endcapture -%}
    {%- assign swatch_labels = swatch_translation | append: ',' | split: ',' -%}
    {%- for label in swatch_labels -%}
      {%- assign sanitized_label = label | lstrip | rstrip -%}
      {%- if product.options_by_name[sanitized_label].values.size > 0 -%}
        <div class="grid__swatch__container">
          <p class="grid__swatch__placeholder caps">{{ 'collections.general.swatches_with_count' | t: count: product.options_by_name[sanitized_label].values.size }}</p>
          <form class="grid__swatch__hover" data-grid-swatches data-swatch-handle="{{ product.handle }}" data-swatch-label="{{ label }}" data-scrollbar data-scrollbar-slider></form>

          <button type="button" class="tabs__arrow tabs__arrow--prev is-hidden" data-scrollbar-arrow-prev>
            <span class="visually-hidden">{{ 'general.accessibility.see_all' | t }}</span>
          </button>

          <button type="button" class="tabs__arrow tabs__arrow--next is-hidden" data-scrollbar-arrow-next>
            <span class="visually-hidden">{{ 'general.accessibility.see_all' | t }}</span>
          </button>
        </div>
        {% break %}
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
{%- endcapture -%}

{%- liquid
  assign product_img_ratio = product.featured_media.preview_image.aspect_ratio | default: 1
  assign image_ratio = 1 | divided_by: product_img_ratio | times: 100
  if settings.product_grid_image == 'crop'
    assign image_ratio = settings.product_grid_aspect_ratio | times: 100
  elsif settings.product_grid_image == 'scale'
    assign multiplier = settings.product_grid_aspect_ratio
    assign inverse_ratio = 1 | divided_by: product_img_ratio
    assign top_offset =  1 | divided_by: product_img_ratio | times: 100 | divided_by: 2
    assign top_offset_subtractor =  multiplier | times: 100 | divided_by: 2
  endif
-%}

{%- if settings.product_grid_image == 'scale' -%}
  {%- capture auto_height -%}
    {%- if inverse_ratio > multiplier -%}
      style="width:{{ product_img_ratio | times: multiplier | times: 100 }}%; margin: 0 auto;"
    {%- else -%}
      style="padding:{{ top_offset_subtractor | minus: top_offset }}% 0;"
    {%- endif -%}
  {%- endcapture -%}
{%- endif -%}

<product-grid-item class="product-grid-item {% if on_sale %} on-sale{% endif %}{% if tagged %} tagged{% endif %}{% if product.media.size > 1 and settings.cycle_hover_enable %} is-slideshow{% endif %}" data-grid-item="{{ product.id }}" data-stop-slideshow-mobile="true">
  <div class="product-grid-item__container" {{ auto_height }}>
    <a href="{{ product.url | within: collection }}" data-grid-link class="lazy-image" aria-label="{{ product.title | strip_html | escape }}" style="padding-top:{{ image_ratio }}%;">
      <div class="product-grid-item__images" data-grid-images="{{ images_limit }}" data-grid-slide>
        {%- if product.media.size > 0 -%}
          {%- for media in product.media limit: images_limit -%}
            <div class="product-grid-item__image lazyload fade-in{% if forloop.first %} is-active{% endif %}"
              data-grid-image="{{ forloop.index0 }}"
              data-grid-image-target="{{ media.id }}"
              data-grid-image-target-default="{{ media.id }}"
              data-bgset="{% render 'bgset', image: media.preview_image %}"
              role="img"
              aria-label="{{ media.alt | default: product.title | strip_html | escape }}">&nbsp;</div>
          {%- endfor -%}
        {%- endif -%}
      </div>

      {{ badge }}
    </a>

    {%- if settings.quickadd_enable -%}
      <upsell-product class="product-grid-item__actions" data-upsell="{{ product.id }}">
        <div data-upsell-holder="{{ product.id }}" data-add-action-wrapper>
          <button type="button" class="product-grid-item__btn" data-popup-{{ product.id }}="{{ product.handle }}">{{ 'products.general.quick_add' | t }}</button>

          <script data-upsell-modal-template type="text/x-template">
            <div class="drawer drawer--right upsell__modal" data-upsell-modal data-form-holder id="{{ product.id }}" aria-hidden="true">
              <div class="drawer__content" data-product-upsell-ajax></div>

              <span class="drawer__underlay" data-micromodal-close tabindex="-1">
                <span class="drawer__underlay__fill"></span>
                <span class="drawer__underlay__blur"></span>
              </span>
            </div>
          </script>
        </div>
      </upsell-product>
    {%- endif -%}
  </div>
  <noscript>
    <a href="{{ product.url | within: collection }}">
      <img class="responsive-wide-image" src="{{ product.featured_media.preview_image | img_url: '360x' }}" alt="{{ product.featured_media.alt | default: product.title | strip_html | escape }}">
      {{ badge }}
    </a>
  </noscript>

  <div class="product__grid__info {{ text_align | default: settings.collection_text_alignment | default: 'text-center' }}" data-swapper-wrapper>
    <a href="{{ product.url | within: collection | capitalize }}" data-grid-link aria-label="{{ product.title | strip_html | escape }}">
      <p class="visually-hidden">{{- product.title | strip_html | escape -}}</p>

      <div class="product__grid__title__wrapper">
        <p class="product__grid__title">
          {{ product.title | strip_html | escape }}
        </p>
        {%- if settings.product_grid_show_rating and product.metafields.reviews.rating.value != blank -%}
          <div class="rating__wrapper__grid">
            {% render 'product-rating', product: product, show_rating_count: settings.product_grid_show_rating_count %}
          </div>
        {%- endif -%}
      </div>

      <div class="product__grid__price {% if has_siblings %} product__grid__price--nowrap{% endif %}">
        {%- if has_siblings -%}
          <span class="product__grid__cutline" data-swapper-target>{{ product.metafields.theme.cutline.value }}</span>
        {%- endif -%}
        <span class="price{% if on_sale %} on-sale{% endif %}">
          {% if product.price_varies %}{{ 'products.general.from' | t }} {% endif %}
          {%- if settings.currency_code_enable -%}
            {{ product.price | money_with_currency }}
          {%- else -%}
            {{ product.price | money }}
          {%- endif -%}
        </span>
        {% if on_sale %}
          <span class="compare-at">
            {%- if settings.currency_code_enable -%}
              {{ product.compare_at_price | money_with_currency }}
            {%- else -%}
              {{ product.compare_at_price | money }}
            {%- endif -%}
          </span>
        {% endif %}
      </div>
      {% if current_variant.unit_price %}
        {% capture unit_price_separator %}
          <span aria-hidden="true">/</span><span class="visually-hidden">{{ 'general.accessibility.unit_price_separator' | t }}&nbsp;</span>
        {% endcapture %}
        {% capture unit_price_base_unit %}
          {% if current_variant.unit_price_measurement.reference_value != 1 %}
            {{ current_variant.unit_price_measurement.reference_value }}
          {% endif %}
          {{ current_variant.unit_price_measurement.reference_unit }}
        {% endcapture %}
        <p class="product__grid__price__unit">
          <span class="visually-hidden">{{ 'products.product.unit_price_label' | t }}</span>
          <span class="price-per-unit">
            {%- if settings.currency_code_enable -%}
              {{ current_variant.unit_price | money_with_currency }}
            {%- else -%}
              {{ current_variant.unit_price | money }}
            {%- endif -%}
            {{- unit_price_separator -}}{{- unit_price_base_unit -}}
          </span>
        </p>
      {% endif %}
      {% if sold_out %}
        <p class="product__grid__price__sold">
          <em>{{ 'products.product.sold_out' | t }}</em>
        </p>
      {% endif %}
    </a>

    {%- if has_siblings -%}
      {%- assign sibs_collection = collections[product.metafields.theme.siblings.value] -%}
      {% if sibs_collection != blank %}
        <div class="product__grid__sibs">
          <div class="grid__swatch__container">
            <p class="grid__swatch__placeholder caps">{{ 'collections.general.swatches_with_count' | t: count: sibs_collection.products_count }}</p>
            <div class="grid__swatch__hover">
              <div class="sibs__slider">
                <div class="sibs__inner" data-sibling-inner data-scrollbar data-scrollbar-slider>
                  {%- for sib_product in sibs_collection.products limit: 50 -%}
                    {%- assign current_class = '' -%}
                    {%- if sib_product.handle == product.handle -%}
                      {%- assign current_class = 'siblings__link--current' -%}
                    {%- endif -%}
                    {%- assign title_safe = sib_product.title | strip_html | escape -%}
                    {%- assign color_name = sib_product.metafields.theme.cutline.value | default: title_safe -%}
                    <div class="siblings__link__holder">
                      <a href="{{ sib_product.url }}" class="siblings__link {{ current_class }}" data-swapper-hover="{{ color_name }}" data-sibling-id="{{ sib_product.id }}" data-sibling-product="{{ sib_product.handle }}" data-sibling-index="{{ forloop.index0 }}">
                        <div class="siblings__swatch">
                          <div class="sibling__image">{%- render 'image-fill', img_object: sib_product.featured_media.preview_image, aspect_ratio: 1.0 -%}</div>
                        </div>
                      </a>
                    </div>
                  {%- endfor -%}
                </div>
                <button type="button" class="tabs__arrow tabs__arrow--prev is-hidden" data-scrollbar-arrow-prev>
                  <span class="visually-hidden">{{ 'general.accessibility.see_all' | t }}</span>
                </button>
                <button type="button" class="tabs__arrow tabs__arrow--next is-hidden" data-scrollbar-arrow-next>
                  <span class="visually-hidden">{{ 'general.accessibility.see_all' | t }}</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      {% endif %}
    {%- else -%}
      {{ swatches }}
    {%- endif -%}
  </div>
</product-grid-item>
